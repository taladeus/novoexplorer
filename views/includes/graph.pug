
div(id='viz')
    script(type="text/javascript").

        var blocks = !{JSON.stringify(latestBlocks)}
        
        // Create the input graph
        var g = new dagreD3.graphlib.Graph()
            .setGraph({})
            .setDefaultEdgeLabel(function() { return {}; });
            g.graph().rankDir = 'RL';

        for(var i=0;i<=blocks.length-3;i++) { 
            if(blocks[i].miner && blocks[i].miner.name){
                g.setNode(i,  { label: '#'+blocks[i].height + '\n' + blocks[i].miner.name, class: "type-S" });
             }
             else if (blocks[i].miner){
                g.setNode(i,  { label: '#'+blocks[i].height + '\n' + blocks[i].miner.substring(0, 3)+"...", class: "type-S" });
             }
             else{             
                g.setNode(i,  { label: '#'+blocks[i].height + '\n' + 'Unknown', class: "type-S" }); 
             }
         }

        g.setNode(999,  {label: '', shape:"img" }); //Alpha node

        g.nodes().forEach(function(v) {
        var node = g.node(v);
        // Round the corners of the nodes
        node.rx = node.ry = 5;
        
        if(node.id === 999){
                node.shape = "img";
        }
        
        });
        


         for(var i=0 ;i<blocks.length-3;i++) {
                g.setEdge(i+1, i); 
        }

         g.setEdge(0, 999); 
        
        // Create the renderer
        var render = new dagreD3.render();
        render.shapes().img = function circle(parent, bbox, node) {
            //var r = Math.max(bbox.width, bbox.height) / 2,
            var shapeSvg = parent.insert("image")
                .attr("class", "nodeImage")
                .attr("xlink:href", function(d) {
                    if (node) {
                        return '../img/logo/nbc.png';
                    }
                }).attr("x", "-90px")
                .attr("y", "-15px")
                .attr("width", "120px")
                .attr("height", "30px");

            node.intersect = function(point) {
            return dagreD3.intersect.circle(node, 30, point);
            };
        
            svg.selectAll("g.node").on("click", function(id) 
            { 
                var _node = g.node(id);
                if(id != 999) 
                {
                    window.open("/block-height/"+parseInt(_node.label.replace(/[^0-9\.]/g, ''), 10),'_blank');
                }
                else
                {
                    window.open("https://novobitcoin.org",'_blank');
                }
         });

        return shapeSvg;
        };

        // Set up an SVG group so that we can translate the final graph.
        var svg = d3.select("#viz")
            .append("svg")
            .attr('width', "100%")
            .attr('height', "50%"),
            svgGroup = svg.append("g");




        // Run the renderer. This is what draws the final graph.
        render(d3.select("svg g"), g);

        // Center the graph
        var xCenterOffset = (g.graph().width);
        svgGroup.attr("transform", "translate(" + 30 + ", 20)");
        svg.attr("height", g.graph().height + 40);        